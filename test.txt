package com.refayatul.calculator

import android.content.Context
import android.content.res.Resources.Theme
import android.os.Bundle
import android.widget.Toast
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.activity.enableEdgeToEdge
import androidx.compose.foundation.background
import androidx.compose.foundation.layout.Arrangement
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.Row
import androidx.compose.foundation.layout.fillMaxHeight
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.foundation.text.KeyboardOptions
import androidx.compose.material3.Button
import androidx.compose.material3.MaterialTheme
import androidx.compose.material3.Scaffold
import androidx.compose.material3.Surface
import androidx.compose.material3.Text
import androidx.compose.material3.TextField
import androidx.compose.runtime.Composable
import androidx.compose.runtime.getValue
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.remember
import androidx.compose.runtime.setValue
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.platform.LocalContext
import androidx.compose.ui.text.TextStyle
import androidx.compose.ui.text.font.FontStyle
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.text.input.KeyboardType
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import com.refayatul.calculator.ui.theme.CalculatoRTheme

class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        enableEdgeToEdge()
        setContent {
                CalculatoRTheme {
                    Surface(modifier = Modifier.fillMaxSize(),
                        color = MaterialTheme.colorScheme.background) {

                        GreetingPreview()

                    }
                }


            }
        }
    }


@Composable
fun Greeting() {


    Column(
        modifier = Modifier
            .fillMaxSize()
            .fillMaxHeight()
            .padding(10.dp)
            .background(Color.Unspecified),
        verticalArrangement = Arrangement.Center,
        horizontalAlignment = Alignment.CenterHorizontally

    ) {
            Text(text = "Fb icon", style = TextStyle(fontSize = 24.sp, fontWeight = FontWeight.Bold),
                modifier = Modifier.padding(16.dp)
            )

        var textName by remember {
            mutableStateOf("")
        }


        TextField(value = textName,
            onValueChange = {
                textName = it
            },
            keyboardOptions = KeyboardOptions(
                keyboardType = KeyboardType.Text
            ),
            placeholder = {
                Text(text = "Username")
            },
            singleLine = true


        )

        var textPass by remember {
            mutableStateOf("")
        }
            TextField(value = textPass,
                onValueChange = {
                textPass = it
            },
                keyboardOptions = KeyboardOptions(
                    keyboardType = KeyboardType.Password
                ),
                placeholder = {
                    Text(text = "Password")
                },
                singleLine = true
            )


        val context = LocalContext.current
        var count by remember {
            mutableStateOf(0)
        }

        Text(text = "count $count")
        Button(onClick = {
                ButtonClicked(context)
                count++
            
        }) {
            Text(text = "Login")
        }














    }





}

fun ButtonClicked(context : Context){
    Toast.makeText(context, "Tryig to Login", Toast.LENGTH_SHORT).show()
}



@Preview(showBackground = true)
@Composable
fun GreetingPreview() {
    CalculatoRTheme {
        Greeting()
    }
}
